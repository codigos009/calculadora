CalculadoraTestes.cs
fragmento de c√≥digo
using NUnit.Framework;

public class CalculatorTests
{
    private Calculator _calculator;

    public void Setup()
    {
        _calculator = new Calculator();
    }

   
    
    public void Add_ShouldAddTwoNumbersCorrectly()
    {
        int result = _calculator.Add(5, 3);
        Assert.AreEqual(8, result);
    }

   
 
    public void Subtract_ShouldSubtractTwoNumbersCorrectly()
    {
        int result = _calculator.Subtract(5, 3);
        Assert.AreEqual(2, result);
    }

   
  
    public void Multiply_ShouldMultiplyTwoNumbersCorrectly()
    {
        int result = _calculator.Multiply(5, 3);
        Assert.AreEqual(15, result);
    }

   
  
    public void Divide_ShouldThrowDivideByZeroException_WhenDivisorIsZero()
    {
        Assert.Throws<DivideByZeroException>(() => _calculator.Divide(10, 0));
    }

   
 
    public void Divide_ShouldDivideTwoNumbersCorrectly()
    {
        int result = _calculator.Divide(10, 2);
        Assert.AreEqual(5, result);
    }

    
 
    public void IsPrime_ShouldReturnTrue_ForPrimeNumber()
    {
        bool isPrime = _calculator.IsPrime(7);
        Assert.IsTrue(isPrime);
    }

   
 
    public void IsPrime_ShouldReturnFalse_ForNonPrimeNumber()
    {
        bool isPrime = _calculator.IsPrime(8);
        Assert.IsFalse(isPrime);
    }
